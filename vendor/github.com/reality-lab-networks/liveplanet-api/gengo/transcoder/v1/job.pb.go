// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: transcoder/v1/job.proto

package v1 // import "github.com/reality-lab-networks/liveplanet-api/gengo/transcoder/v1"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/mwitkow/go-proto-validators"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Job struct {
	BroadcastId          string               `protobuf:"bytes,1,opt,name=broadcast_id,json=broadcastId,proto3" json:"broadcast_id,omitempty"`
	Status               Status               `protobuf:"varint,2,opt,name=status,proto3,enum=liveplanet.api.transcoder.v1.Status" json:"status,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Kind                 string               `protobuf:"bytes,4,opt,name=kind,proto3" json:"kind,omitempty"`
	Spec                 *JobSpec             `protobuf:"bytes,5,opt,name=spec,proto3" json:"spec,omitempty"`
	Tasks                []*Task              `protobuf:"bytes,6,rep,name=tasks,proto3" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_8550cffd2a3236f1, []int{0}
}
func (m *Job) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job.Unmarshal(m, b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job.Marshal(b, m, deterministic)
}
func (dst *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(dst, src)
}
func (m *Job) XXX_Size() int {
	return xxx_messageInfo_Job.Size(m)
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

func (m *Job) GetBroadcastId() string {
	if m != nil {
		return m.BroadcastId
	}
	return ""
}

func (m *Job) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return StatusNone
}

func (m *Job) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Job) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Job) GetSpec() *JobSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Job) GetTasks() []*Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type JobSpec struct {
	Input                *VideoInput `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	Output               *JobOutput  `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	Options              *JobOptions `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *JobSpec) Reset()         { *m = JobSpec{} }
func (m *JobSpec) String() string { return proto.CompactTextString(m) }
func (*JobSpec) ProtoMessage()    {}
func (*JobSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_8550cffd2a3236f1, []int{1}
}
func (m *JobSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobSpec.Unmarshal(m, b)
}
func (m *JobSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobSpec.Marshal(b, m, deterministic)
}
func (dst *JobSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobSpec.Merge(dst, src)
}
func (m *JobSpec) XXX_Size() int {
	return xxx_messageInfo_JobSpec.Size(m)
}
func (m *JobSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_JobSpec.DiscardUnknown(m)
}

var xxx_messageInfo_JobSpec proto.InternalMessageInfo

func (m *JobSpec) GetInput() *VideoInput {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *JobSpec) GetOutput() *JobOutput {
	if m != nil {
		return m.Output
	}
	return nil
}

func (m *JobSpec) GetOptions() *JobOptions {
	if m != nil {
		return m.Options
	}
	return nil
}

type JobOutput struct {
	Video                *JobVideoOutput `protobuf:"bytes,1,opt,name=video,proto3" json:"video,omitempty"`
	Audio                *AudioOutput    `protobuf:"bytes,2,opt,name=audio,proto3" json:"audio,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *JobOutput) Reset()         { *m = JobOutput{} }
func (m *JobOutput) String() string { return proto.CompactTextString(m) }
func (*JobOutput) ProtoMessage()    {}
func (*JobOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_8550cffd2a3236f1, []int{2}
}
func (m *JobOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobOutput.Unmarshal(m, b)
}
func (m *JobOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobOutput.Marshal(b, m, deterministic)
}
func (dst *JobOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobOutput.Merge(dst, src)
}
func (m *JobOutput) XXX_Size() int {
	return xxx_messageInfo_JobOutput.Size(m)
}
func (m *JobOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_JobOutput.DiscardUnknown(m)
}

var xxx_messageInfo_JobOutput proto.InternalMessageInfo

func (m *JobOutput) GetVideo() *JobVideoOutput {
	if m != nil {
		return m.Video
	}
	return nil
}

func (m *JobOutput) GetAudio() *AudioOutput {
	if m != nil {
		return m.Audio
	}
	return nil
}

type JobVideoOutput struct {
	Format               string                  `protobuf:"bytes,1,opt,name=format,proto3" json:"format,omitempty"`
	IsLive               bool                    `protobuf:"varint,2,opt,name=is_live,json=isLive,proto3" json:"is_live,omitempty"`
	RtmpAddress          string                  `protobuf:"bytes,3,opt,name=rtmp_address,json=rtmpAddress,proto3" json:"rtmp_address,omitempty"`
	BackupRtmpAddress    string                  `protobuf:"bytes,4,opt,name=backup_rtmp_address,json=backupRtmpAddress,proto3" json:"backup_rtmp_address,omitempty"`
	StereoFormat         string                  `protobuf:"bytes,5,opt,name=stereo_format,json=stereoFormat,proto3" json:"stereo_format,omitempty"`
	Projection           string                  `protobuf:"bytes,6,opt,name=projection,proto3" json:"projection,omitempty"`
	Framerate            uint32                  `protobuf:"varint,7,opt,name=framerate,proto3" json:"framerate,omitempty"`
	SegmentTime          uint32                  `protobuf:"varint,8,opt,name=segment_time,json=segmentTime,proto3" json:"segment_time,omitempty"`
	GopSize              uint32                  `protobuf:"varint,9,opt,name=gop_size,json=gopSize,proto3" json:"gop_size,omitempty"`
	IsSmoothstep         bool                    `protobuf:"varint,10,opt,name=is_smoothstep,json=isSmoothstep,proto3" json:"is_smoothstep,omitempty"`
	LiveStartIndex       int32                   `protobuf:"varint,11,opt,name=live_start_index,json=liveStartIndex,proto3" json:"live_start_index,omitempty"`
	Sessions             []*JobVideoSessionGroup `protobuf:"bytes,30,rep,name=sessions,proto3" json:"sessions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *JobVideoOutput) Reset()         { *m = JobVideoOutput{} }
func (m *JobVideoOutput) String() string { return proto.CompactTextString(m) }
func (*JobVideoOutput) ProtoMessage()    {}
func (*JobVideoOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_8550cffd2a3236f1, []int{3}
}
func (m *JobVideoOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobVideoOutput.Unmarshal(m, b)
}
func (m *JobVideoOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobVideoOutput.Marshal(b, m, deterministic)
}
func (dst *JobVideoOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobVideoOutput.Merge(dst, src)
}
func (m *JobVideoOutput) XXX_Size() int {
	return xxx_messageInfo_JobVideoOutput.Size(m)
}
func (m *JobVideoOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_JobVideoOutput.DiscardUnknown(m)
}

var xxx_messageInfo_JobVideoOutput proto.InternalMessageInfo

func (m *JobVideoOutput) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *JobVideoOutput) GetIsLive() bool {
	if m != nil {
		return m.IsLive
	}
	return false
}

func (m *JobVideoOutput) GetRtmpAddress() string {
	if m != nil {
		return m.RtmpAddress
	}
	return ""
}

func (m *JobVideoOutput) GetBackupRtmpAddress() string {
	if m != nil {
		return m.BackupRtmpAddress
	}
	return ""
}

func (m *JobVideoOutput) GetStereoFormat() string {
	if m != nil {
		return m.StereoFormat
	}
	return ""
}

func (m *JobVideoOutput) GetProjection() string {
	if m != nil {
		return m.Projection
	}
	return ""
}

func (m *JobVideoOutput) GetFramerate() uint32 {
	if m != nil {
		return m.Framerate
	}
	return 0
}

func (m *JobVideoOutput) GetSegmentTime() uint32 {
	if m != nil {
		return m.SegmentTime
	}
	return 0
}

func (m *JobVideoOutput) GetGopSize() uint32 {
	if m != nil {
		return m.GopSize
	}
	return 0
}

func (m *JobVideoOutput) GetIsSmoothstep() bool {
	if m != nil {
		return m.IsSmoothstep
	}
	return false
}

func (m *JobVideoOutput) GetLiveStartIndex() int32 {
	if m != nil {
		return m.LiveStartIndex
	}
	return 0
}

func (m *JobVideoOutput) GetSessions() []*JobVideoSessionGroup {
	if m != nil {
		return m.Sessions
	}
	return nil
}

type JobVideoSessionGroup struct {
	Session              []*VideoOutput `protobuf:"bytes,1,rep,name=session,proto3" json:"session,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *JobVideoSessionGroup) Reset()         { *m = JobVideoSessionGroup{} }
func (m *JobVideoSessionGroup) String() string { return proto.CompactTextString(m) }
func (*JobVideoSessionGroup) ProtoMessage()    {}
func (*JobVideoSessionGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_8550cffd2a3236f1, []int{4}
}
func (m *JobVideoSessionGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobVideoSessionGroup.Unmarshal(m, b)
}
func (m *JobVideoSessionGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobVideoSessionGroup.Marshal(b, m, deterministic)
}
func (dst *JobVideoSessionGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobVideoSessionGroup.Merge(dst, src)
}
func (m *JobVideoSessionGroup) XXX_Size() int {
	return xxx_messageInfo_JobVideoSessionGroup.Size(m)
}
func (m *JobVideoSessionGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_JobVideoSessionGroup.DiscardUnknown(m)
}

var xxx_messageInfo_JobVideoSessionGroup proto.InternalMessageInfo

func (m *JobVideoSessionGroup) GetSession() []*VideoOutput {
	if m != nil {
		return m.Session
	}
	return nil
}

type JobStatus struct {
	BroadcastId          string   `protobuf:"bytes,1,opt,name=broadcast_id,json=broadcastId,proto3" json:"broadcast_id,omitempty"`
	Status               Status   `protobuf:"varint,2,opt,name=status,proto3,enum=liveplanet.api.transcoder.v1.Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobStatus) Reset()         { *m = JobStatus{} }
func (m *JobStatus) String() string { return proto.CompactTextString(m) }
func (*JobStatus) ProtoMessage()    {}
func (*JobStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_8550cffd2a3236f1, []int{5}
}
func (m *JobStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobStatus.Unmarshal(m, b)
}
func (m *JobStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobStatus.Marshal(b, m, deterministic)
}
func (dst *JobStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobStatus.Merge(dst, src)
}
func (m *JobStatus) XXX_Size() int {
	return xxx_messageInfo_JobStatus.Size(m)
}
func (m *JobStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_JobStatus.DiscardUnknown(m)
}

var xxx_messageInfo_JobStatus proto.InternalMessageInfo

func (m *JobStatus) GetBroadcastId() string {
	if m != nil {
		return m.BroadcastId
	}
	return ""
}

func (m *JobStatus) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return StatusNone
}

type JobOptions struct {
	MpVersion            uint32   `protobuf:"varint,1,opt,name=mp_version,json=mpVersion,proto3" json:"mp_version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobOptions) Reset()         { *m = JobOptions{} }
func (m *JobOptions) String() string { return proto.CompactTextString(m) }
func (*JobOptions) ProtoMessage()    {}
func (*JobOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_8550cffd2a3236f1, []int{6}
}
func (m *JobOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobOptions.Unmarshal(m, b)
}
func (m *JobOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobOptions.Marshal(b, m, deterministic)
}
func (dst *JobOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobOptions.Merge(dst, src)
}
func (m *JobOptions) XXX_Size() int {
	return xxx_messageInfo_JobOptions.Size(m)
}
func (m *JobOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_JobOptions.DiscardUnknown(m)
}

var xxx_messageInfo_JobOptions proto.InternalMessageInfo

func (m *JobOptions) GetMpVersion() uint32 {
	if m != nil {
		return m.MpVersion
	}
	return 0
}

func init() {
	proto.RegisterType((*Job)(nil), "liveplanet.api.transcoder.v1.Job")
	proto.RegisterType((*JobSpec)(nil), "liveplanet.api.transcoder.v1.JobSpec")
	proto.RegisterType((*JobOutput)(nil), "liveplanet.api.transcoder.v1.JobOutput")
	proto.RegisterType((*JobVideoOutput)(nil), "liveplanet.api.transcoder.v1.JobVideoOutput")
	proto.RegisterType((*JobVideoSessionGroup)(nil), "liveplanet.api.transcoder.v1.JobVideoSessionGroup")
	proto.RegisterType((*JobStatus)(nil), "liveplanet.api.transcoder.v1.JobStatus")
	proto.RegisterType((*JobOptions)(nil), "liveplanet.api.transcoder.v1.JobOptions")
}

func init() { proto.RegisterFile("transcoder/v1/job.proto", fileDescriptor_job_8550cffd2a3236f1) }

var fileDescriptor_job_8550cffd2a3236f1 = []byte{
	// 809 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xdd, 0x6e, 0xe3, 0x44,
	0x18, 0xad, 0xdb, 0xc6, 0x69, 0xbe, 0x74, 0x2b, 0x18, 0x10, 0xeb, 0xad, 0x96, 0x6c, 0x30, 0x20,
	0xbc, 0x82, 0xd8, 0x6a, 0x90, 0x10, 0x2b, 0x90, 0x50, 0x8b, 0xd8, 0x55, 0x2b, 0x04, 0x92, 0xb3,
	0x5a, 0x24, 0xb8, 0xb0, 0xc6, 0xf6, 0xd4, 0x3b, 0x9b, 0xd8, 0x33, 0x9a, 0x19, 0xbb, 0xb0, 0x4f,
	0xb2, 0xcf, 0xc0, 0x93, 0x70, 0xc9, 0x05, 0xd7, 0x80, 0xca, 0x8b, 0xa0, 0xf9, 0x69, 0xd2, 0xa0,
	0x55, 0xda, 0x1b, 0xee, 0x3c, 0xe7, 0x3b, 0xe7, 0xcc, 0x37, 0x27, 0xdf, 0x4c, 0xe0, 0xae, 0x12,
	0xb8, 0x91, 0x05, 0x2b, 0x89, 0x48, 0xba, 0xa3, 0xe4, 0x05, 0xcb, 0x63, 0x2e, 0x98, 0x62, 0xe8,
	0xfe, 0x82, 0x76, 0x84, 0x2f, 0x70, 0x43, 0x54, 0x8c, 0x39, 0x8d, 0x57, 0xbc, 0xb8, 0x3b, 0x3a,
	0x7c, 0x50, 0x31, 0x56, 0x2d, 0x48, 0x62, 0xb8, 0x79, 0x7b, 0x9e, 0x28, 0x5a, 0x13, 0xa9, 0x70,
	0xcd, 0xad, 0xfc, 0x70, 0x52, 0x51, 0xf5, 0xbc, 0xcd, 0xe3, 0x82, 0xd5, 0x49, 0xc5, 0x2a, 0xb6,
	0x62, 0xea, 0x95, 0x59, 0x98, 0x2f, 0x47, 0xff, 0xec, 0x1a, 0xbd, 0xbe, 0xa0, 0x6a, 0xce, 0x2e,
	0x92, 0x8a, 0x4d, 0x4c, 0x71, 0xd2, 0xe1, 0x05, 0x2d, 0xb1, 0x62, 0x42, 0x26, 0xcb, 0x4f, 0xa7,
	0x3b, 0x5c, 0x6f, 0x5f, 0x2a, 0xac, 0x5a, 0xe9, 0x6a, 0xc1, 0x7a, 0x4d, 0x61, 0x39, 0x77, 0x95,
	0x7b, 0xeb, 0x15, 0xdc, 0x96, 0x94, 0xbd, 0xbe, 0xd4, 0xd1, 0x92, 0xb8, 0x52, 0xf8, 0xeb, 0x36,
	0xec, 0x9c, 0xb1, 0x1c, 0xbd, 0x07, 0xfb, 0xb9, 0x60, 0xb8, 0x2c, 0xb0, 0x54, 0x19, 0x2d, 0x03,
	0x6f, 0xec, 0x45, 0x83, 0x74, 0xb8, 0xc4, 0x4e, 0x4b, 0xf4, 0x25, 0xf8, 0xb6, 0x95, 0x60, 0x7b,
	0xec, 0x45, 0x07, 0xd3, 0x0f, 0xe2, 0x4d, 0x69, 0xc6, 0x33, 0xc3, 0x4d, 0x9d, 0x06, 0x3d, 0x02,
	0x28, 0x04, 0xc1, 0x8a, 0x94, 0x19, 0x56, 0xc1, 0xce, 0xd8, 0x8b, 0x86, 0xd3, 0xc3, 0xd8, 0x26,
	0x1e, 0x5f, 0xe5, 0x18, 0x3f, 0xbd, 0x4a, 0x3c, 0x1d, 0x38, 0xf6, 0xb1, 0x42, 0x08, 0x76, 0xe7,
	0xb4, 0x29, 0x83, 0x5d, 0xd3, 0x93, 0xf9, 0x46, 0x8f, 0x60, 0x57, 0x72, 0x52, 0x04, 0x3d, 0x63,
	0xf4, 0xe1, 0xe6, 0x56, 0xce, 0x58, 0x3e, 0xe3, 0xa4, 0x48, 0x8d, 0x04, 0x7d, 0x0e, 0x3d, 0x1d,
	0x9b, 0x0c, 0xfc, 0xf1, 0x4e, 0x34, 0x9c, 0x86, 0x9b, 0xb5, 0x4f, 0xb1, 0x9c, 0xa7, 0x56, 0x10,
	0xfe, 0xe9, 0x41, 0xdf, 0x79, 0xa1, 0xc7, 0xd0, 0xa3, 0x0d, 0x6f, 0x95, 0x49, 0x6a, 0x38, 0x8d,
	0x36, 0xbb, 0x3c, 0xd3, 0x91, 0x9f, 0x6a, 0xfe, 0x89, 0x7f, 0xf9, 0xd7, 0x83, 0xed, 0xb1, 0x97,
	0x5a, 0x39, 0x7a, 0x02, 0x3e, 0x6b, 0x95, 0x36, 0xda, 0x36, 0x46, 0x1f, 0xdd, 0x78, 0x94, 0xef,
	0x0d, 0x7d, 0xe9, 0xe3, 0xe4, 0xe8, 0x04, 0xfa, 0x8c, 0x2b, 0xca, 0x1a, 0xe9, 0xd2, 0x8d, 0x6e,
	0x76, 0xb2, 0xfc, 0xf4, 0x4a, 0x18, 0xbe, 0xf2, 0x60, 0xb0, 0xdc, 0x01, 0x9d, 0x41, 0xcf, 0x8c,
	0x8a, 0x3b, 0xe2, 0x27, 0x37, 0xfa, 0x99, 0x53, 0xfe, 0xa7, 0x3d, 0x6b, 0x81, 0xbe, 0x82, 0x9e,
	0x99, 0x48, 0x77, 0xca, 0x87, 0x9b, 0xbd, 0x8e, 0x35, 0xd5, 0x1a, 0xa5, 0x56, 0x17, 0xfe, 0xb1,
	0x03, 0x07, 0xeb, 0x5b, 0xa0, 0x77, 0xc0, 0x3f, 0x67, 0xa2, 0xc6, 0xca, 0x4d, 0xab, 0x5b, 0xa1,
	0xbb, 0xd0, 0xa7, 0x32, 0xd3, 0x1b, 0x98, 0xdd, 0xf6, 0x52, 0x9f, 0xca, 0x6f, 0x69, 0x47, 0xf4,
	0x90, 0x0b, 0x55, 0xf3, 0x0c, 0x97, 0xa5, 0x20, 0xd2, 0xe6, 0x34, 0x48, 0x87, 0x1a, 0x3b, 0xb6,
	0x10, 0x8a, 0xe1, 0xad, 0x1c, 0x17, 0xf3, 0x96, 0x67, 0x6b, 0x4c, 0x3b, 0x7a, 0x6f, 0xda, 0x52,
	0x7a, 0x8d, 0xff, 0x3e, 0xdc, 0x91, 0x8a, 0x08, 0xc2, 0x32, 0xd7, 0x4a, 0xcf, 0x30, 0xf7, 0x2d,
	0xf8, 0xd8, 0x36, 0x34, 0x02, 0xe0, 0x82, 0xbd, 0x20, 0x85, 0x4e, 0x39, 0xf0, 0x0d, 0xe3, 0x1a,
	0x82, 0xee, 0xc3, 0xe0, 0x5c, 0xe0, 0x9a, 0x08, 0xac, 0x48, 0xd0, 0x1f, 0x7b, 0xd1, 0x9d, 0x74,
	0x05, 0xe8, 0xae, 0x25, 0xa9, 0x6a, 0xd2, 0xa8, 0x4c, 0x3f, 0x48, 0xc1, 0x9e, 0x21, 0x0c, 0x1d,
	0xa6, 0x6f, 0x0c, 0xba, 0x07, 0x7b, 0x15, 0xe3, 0x99, 0xa4, 0x2f, 0x49, 0x30, 0x30, 0xe5, 0x7e,
	0xc5, 0xf8, 0x8c, 0xbe, 0x24, 0xba, 0x41, 0x2a, 0x33, 0x59, 0x33, 0xa6, 0x9e, 0x4b, 0x45, 0x78,
	0x00, 0x26, 0x92, 0x7d, 0x2a, 0x67, 0x4b, 0x0c, 0x45, 0xf0, 0x86, 0x8e, 0x2b, 0x93, 0x0a, 0x0b,
	0x95, 0xd1, 0xa6, 0x24, 0x3f, 0x07, 0xc3, 0xb1, 0x17, 0xf5, 0xd2, 0x03, 0x8d, 0xcf, 0x34, 0x7c,
	0xaa, 0x51, 0xf4, 0x1d, 0xec, 0x49, 0x22, 0xa5, 0x19, 0xb3, 0x91, 0xb9, 0x3f, 0xd3, 0xdb, 0x8d,
	0xc5, 0xcc, 0xaa, 0x9e, 0x08, 0xd6, 0xf2, 0x74, 0xe9, 0x11, 0xfe, 0x04, 0x6f, 0xbf, 0x8e, 0x81,
	0xbe, 0x86, 0xbe, 0xe3, 0x04, 0x9e, 0xd9, 0xe6, 0xe1, 0x2d, 0x2e, 0x98, 0x9b, 0x98, 0x2b, 0x65,
	0xb8, 0x30, 0xd3, 0x6c, 0x1f, 0xa2, 0xff, 0xfd, 0x85, 0x0b, 0x3f, 0x06, 0x58, 0xdd, 0x29, 0xf4,
	0x2e, 0x40, 0xcd, 0xb3, 0x8e, 0x08, 0x77, 0x06, 0xf3, 0xa3, 0xd6, 0xfc, 0x99, 0x05, 0x4e, 0x7e,
	0xf8, 0xed, 0x72, 0xb4, 0xf5, 0xfb, 0xe5, 0x68, 0xeb, 0xef, 0xcb, 0xd1, 0xd6, 0xab, 0x7f, 0x46,
	0x5b, 0x3f, 0x7e, 0x73, 0xed, 0xdf, 0x42, 0x10, 0xbc, 0xa0, 0xea, 0x97, 0xc9, 0x02, 0xe7, 0x93,
	0x86, 0xa8, 0x0b, 0x26, 0xe6, 0x32, 0x59, 0xf5, 0x32, 0xc1, 0x9c, 0x26, 0x15, 0x69, 0x2a, 0x96,
	0xac, 0xbd, 0xec, 0x5f, 0x74, 0x47, 0xb9, 0x6f, 0xde, 0xd2, 0x4f, 0xff, 0x0d, 0x00, 0x00, 0xff,
	0xff, 0x49, 0x46, 0x1e, 0x20, 0x04, 0x07, 0x00, 0x00,
}
