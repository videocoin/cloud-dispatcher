// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: transcoder/v1/jobs_service.proto

package v1 // import "github.com/reality-lab-networks/liveplanet-api/gengo/transcoder/v1"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import empty "github.com/golang/protobuf/ptypes/empty"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/mwitkow/go-proto-validators"
import rpc "github.com/reality-lab-networks/liveplanet-api/gengo/rpc"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateJobRequest struct {
	BroadcastId          string   `protobuf:"bytes,1,opt,name=broadcast_id,json=broadcastId,proto3" json:"broadcast_id,omitempty"`
	PlatformId           string   `protobuf:"bytes,2,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	UserId               uint32   `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EventId              uint64   `protobuf:"varint,4,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	CameraId             string   `protobuf:"bytes,7,opt,name=camera_id,json=cameraId,proto3" json:"camera_id,omitempty"`
	Kind                 string   `protobuf:"bytes,5,opt,name=kind,proto3" json:"kind,omitempty"`
	Spec                 *JobSpec `protobuf:"bytes,6,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateJobRequest) Reset()         { *m = CreateJobRequest{} }
func (m *CreateJobRequest) String() string { return proto.CompactTextString(m) }
func (*CreateJobRequest) ProtoMessage()    {}
func (*CreateJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_jobs_service_8e27dbfe9e838fe1, []int{0}
}
func (m *CreateJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateJobRequest.Unmarshal(m, b)
}
func (m *CreateJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateJobRequest.Marshal(b, m, deterministic)
}
func (dst *CreateJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateJobRequest.Merge(dst, src)
}
func (m *CreateJobRequest) XXX_Size() int {
	return xxx_messageInfo_CreateJobRequest.Size(m)
}
func (m *CreateJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateJobRequest proto.InternalMessageInfo

func (m *CreateJobRequest) GetBroadcastId() string {
	if m != nil {
		return m.BroadcastId
	}
	return ""
}

func (m *CreateJobRequest) GetPlatformId() string {
	if m != nil {
		return m.PlatformId
	}
	return ""
}

func (m *CreateJobRequest) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *CreateJobRequest) GetEventId() uint64 {
	if m != nil {
		return m.EventId
	}
	return 0
}

func (m *CreateJobRequest) GetCameraId() string {
	if m != nil {
		return m.CameraId
	}
	return ""
}

func (m *CreateJobRequest) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *CreateJobRequest) GetSpec() *JobSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type JobRequest struct {
	BroadcastId          string   `protobuf:"bytes,1,opt,name=broadcast_id,json=broadcastId,proto3" json:"broadcast_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobRequest) Reset()         { *m = JobRequest{} }
func (m *JobRequest) String() string { return proto.CompactTextString(m) }
func (*JobRequest) ProtoMessage()    {}
func (*JobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_jobs_service_8e27dbfe9e838fe1, []int{1}
}
func (m *JobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobRequest.Unmarshal(m, b)
}
func (m *JobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobRequest.Marshal(b, m, deterministic)
}
func (dst *JobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobRequest.Merge(dst, src)
}
func (m *JobRequest) XXX_Size() int {
	return xxx_messageInfo_JobRequest.Size(m)
}
func (m *JobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JobRequest proto.InternalMessageInfo

func (m *JobRequest) GetBroadcastId() string {
	if m != nil {
		return m.BroadcastId
	}
	return ""
}

type JobResponse struct {
	BroadcastId          string               `protobuf:"bytes,1,opt,name=broadcast_id,json=broadcastId,proto3" json:"broadcast_id,omitempty"`
	PlatformId           string               `protobuf:"bytes,2,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	UserId               uint32               `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EventId              uint64               `protobuf:"varint,4,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	CameraId             string               `protobuf:"bytes,10,opt,name=camera_id,json=cameraId,proto3" json:"camera_id,omitempty"`
	Kind                 string               `protobuf:"bytes,5,opt,name=kind,proto3" json:"kind,omitempty"`
	Spec                 *JobSpec             `protobuf:"bytes,6,opt,name=spec,proto3" json:"spec,omitempty"`
	Status               string               `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Tasks                []*Task              `protobuf:"bytes,9,rep,name=tasks,proto3" json:"tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *JobResponse) Reset()         { *m = JobResponse{} }
func (m *JobResponse) String() string { return proto.CompactTextString(m) }
func (*JobResponse) ProtoMessage()    {}
func (*JobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_jobs_service_8e27dbfe9e838fe1, []int{2}
}
func (m *JobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobResponse.Unmarshal(m, b)
}
func (m *JobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobResponse.Marshal(b, m, deterministic)
}
func (dst *JobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobResponse.Merge(dst, src)
}
func (m *JobResponse) XXX_Size() int {
	return xxx_messageInfo_JobResponse.Size(m)
}
func (m *JobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JobResponse proto.InternalMessageInfo

func (m *JobResponse) GetBroadcastId() string {
	if m != nil {
		return m.BroadcastId
	}
	return ""
}

func (m *JobResponse) GetPlatformId() string {
	if m != nil {
		return m.PlatformId
	}
	return ""
}

func (m *JobResponse) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *JobResponse) GetEventId() uint64 {
	if m != nil {
		return m.EventId
	}
	return 0
}

func (m *JobResponse) GetCameraId() string {
	if m != nil {
		return m.CameraId
	}
	return ""
}

func (m *JobResponse) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *JobResponse) GetSpec() *JobSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *JobResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *JobResponse) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *JobResponse) GetTasks() []*Task {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type JobStatusRequest struct {
	BroadcastId          string   `protobuf:"bytes,1,opt,name=broadcast_id,json=broadcastId,proto3" json:"broadcast_id,omitempty"`
	Status               Status   `protobuf:"varint,2,opt,name=status,proto3,enum=liveplanet.api.transcoder.v1.Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobStatusRequest) Reset()         { *m = JobStatusRequest{} }
func (m *JobStatusRequest) String() string { return proto.CompactTextString(m) }
func (*JobStatusRequest) ProtoMessage()    {}
func (*JobStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_jobs_service_8e27dbfe9e838fe1, []int{3}
}
func (m *JobStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobStatusRequest.Unmarshal(m, b)
}
func (m *JobStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobStatusRequest.Marshal(b, m, deterministic)
}
func (dst *JobStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobStatusRequest.Merge(dst, src)
}
func (m *JobStatusRequest) XXX_Size() int {
	return xxx_messageInfo_JobStatusRequest.Size(m)
}
func (m *JobStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JobStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JobStatusRequest proto.InternalMessageInfo

func (m *JobStatusRequest) GetBroadcastId() string {
	if m != nil {
		return m.BroadcastId
	}
	return ""
}

func (m *JobStatusRequest) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return StatusNone
}

type JobStatusResponse struct {
	BroadcastId          string   `protobuf:"bytes,1,opt,name=broadcast_id,json=broadcastId,proto3" json:"broadcast_id,omitempty"`
	Status               Status   `protobuf:"varint,2,opt,name=status,proto3,enum=liveplanet.api.transcoder.v1.Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobStatusResponse) Reset()         { *m = JobStatusResponse{} }
func (m *JobStatusResponse) String() string { return proto.CompactTextString(m) }
func (*JobStatusResponse) ProtoMessage()    {}
func (*JobStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_jobs_service_8e27dbfe9e838fe1, []int{4}
}
func (m *JobStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobStatusResponse.Unmarshal(m, b)
}
func (m *JobStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobStatusResponse.Marshal(b, m, deterministic)
}
func (dst *JobStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobStatusResponse.Merge(dst, src)
}
func (m *JobStatusResponse) XXX_Size() int {
	return xxx_messageInfo_JobStatusResponse.Size(m)
}
func (m *JobStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JobStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JobStatusResponse proto.InternalMessageInfo

func (m *JobStatusResponse) GetBroadcastId() string {
	if m != nil {
		return m.BroadcastId
	}
	return ""
}

func (m *JobStatusResponse) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return StatusNone
}

type TaskStatusRequest struct {
	BroadcastId          string   `protobuf:"bytes,1,opt,name=broadcast_id,json=broadcastId,proto3" json:"broadcast_id,omitempty"`
	TaskId               string   `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status               Status   `protobuf:"varint,3,opt,name=status,proto3,enum=liveplanet.api.transcoder.v1.Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskStatusRequest) Reset()         { *m = TaskStatusRequest{} }
func (m *TaskStatusRequest) String() string { return proto.CompactTextString(m) }
func (*TaskStatusRequest) ProtoMessage()    {}
func (*TaskStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_jobs_service_8e27dbfe9e838fe1, []int{5}
}
func (m *TaskStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskStatusRequest.Unmarshal(m, b)
}
func (m *TaskStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskStatusRequest.Marshal(b, m, deterministic)
}
func (dst *TaskStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskStatusRequest.Merge(dst, src)
}
func (m *TaskStatusRequest) XXX_Size() int {
	return xxx_messageInfo_TaskStatusRequest.Size(m)
}
func (m *TaskStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TaskStatusRequest proto.InternalMessageInfo

func (m *TaskStatusRequest) GetBroadcastId() string {
	if m != nil {
		return m.BroadcastId
	}
	return ""
}

func (m *TaskStatusRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *TaskStatusRequest) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return StatusNone
}

func init() {
	proto.RegisterType((*CreateJobRequest)(nil), "liveplanet.api.transcoder.v1.CreateJobRequest")
	proto.RegisterType((*JobRequest)(nil), "liveplanet.api.transcoder.v1.JobRequest")
	proto.RegisterType((*JobResponse)(nil), "liveplanet.api.transcoder.v1.JobResponse")
	proto.RegisterType((*JobStatusRequest)(nil), "liveplanet.api.transcoder.v1.JobStatusRequest")
	proto.RegisterType((*JobStatusResponse)(nil), "liveplanet.api.transcoder.v1.JobStatusResponse")
	proto.RegisterType((*TaskStatusRequest)(nil), "liveplanet.api.transcoder.v1.TaskStatusRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JobsServiceClient is the client API for JobsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JobsServiceClient interface {
	Health(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*rpc.HealthStatus, error)
	CreateJob(ctx context.Context, in *CreateJobRequest, opts ...grpc.CallOption) (*JobResponse, error)
	GetJob(ctx context.Context, in *JobRequest, opts ...grpc.CallOption) (*JobResponse, error)
	GetJobStatus(ctx context.Context, in *JobRequest, opts ...grpc.CallOption) (*JobStatusResponse, error)
	MarkJobAsCanceled(ctx context.Context, in *JobRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	MarkJobAsCompleted(ctx context.Context, in *JobRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type jobsServiceClient struct {
	cc *grpc.ClientConn
}

func NewJobsServiceClient(cc *grpc.ClientConn) JobsServiceClient {
	return &jobsServiceClient{cc}
}

func (c *jobsServiceClient) Health(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*rpc.HealthStatus, error) {
	out := new(rpc.HealthStatus)
	err := c.cc.Invoke(ctx, "/liveplanet.api.transcoder.v1.JobsService/Health", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobsServiceClient) CreateJob(ctx context.Context, in *CreateJobRequest, opts ...grpc.CallOption) (*JobResponse, error) {
	out := new(JobResponse)
	err := c.cc.Invoke(ctx, "/liveplanet.api.transcoder.v1.JobsService/CreateJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobsServiceClient) GetJob(ctx context.Context, in *JobRequest, opts ...grpc.CallOption) (*JobResponse, error) {
	out := new(JobResponse)
	err := c.cc.Invoke(ctx, "/liveplanet.api.transcoder.v1.JobsService/GetJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobsServiceClient) GetJobStatus(ctx context.Context, in *JobRequest, opts ...grpc.CallOption) (*JobStatusResponse, error) {
	out := new(JobStatusResponse)
	err := c.cc.Invoke(ctx, "/liveplanet.api.transcoder.v1.JobsService/GetJobStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobsServiceClient) MarkJobAsCanceled(ctx context.Context, in *JobRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/liveplanet.api.transcoder.v1.JobsService/MarkJobAsCanceled", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobsServiceClient) MarkJobAsCompleted(ctx context.Context, in *JobRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/liveplanet.api.transcoder.v1.JobsService/MarkJobAsCompleted", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobsServiceServer is the server API for JobsService service.
type JobsServiceServer interface {
	Health(context.Context, *empty.Empty) (*rpc.HealthStatus, error)
	CreateJob(context.Context, *CreateJobRequest) (*JobResponse, error)
	GetJob(context.Context, *JobRequest) (*JobResponse, error)
	GetJobStatus(context.Context, *JobRequest) (*JobStatusResponse, error)
	MarkJobAsCanceled(context.Context, *JobRequest) (*empty.Empty, error)
	MarkJobAsCompleted(context.Context, *JobRequest) (*empty.Empty, error)
}

func RegisterJobsServiceServer(s *grpc.Server, srv JobsServiceServer) {
	s.RegisterService(&_JobsService_serviceDesc, srv)
}

func _JobsService_Health_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobsServiceServer).Health(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/liveplanet.api.transcoder.v1.JobsService/Health",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobsServiceServer).Health(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobsService_CreateJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobsServiceServer).CreateJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/liveplanet.api.transcoder.v1.JobsService/CreateJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobsServiceServer).CreateJob(ctx, req.(*CreateJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobsService_GetJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobsServiceServer).GetJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/liveplanet.api.transcoder.v1.JobsService/GetJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobsServiceServer).GetJob(ctx, req.(*JobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobsService_GetJobStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobsServiceServer).GetJobStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/liveplanet.api.transcoder.v1.JobsService/GetJobStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobsServiceServer).GetJobStatus(ctx, req.(*JobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobsService_MarkJobAsCanceled_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobsServiceServer).MarkJobAsCanceled(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/liveplanet.api.transcoder.v1.JobsService/MarkJobAsCanceled",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobsServiceServer).MarkJobAsCanceled(ctx, req.(*JobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobsService_MarkJobAsCompleted_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobsServiceServer).MarkJobAsCompleted(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/liveplanet.api.transcoder.v1.JobsService/MarkJobAsCompleted",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobsServiceServer).MarkJobAsCompleted(ctx, req.(*JobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _JobsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "liveplanet.api.transcoder.v1.JobsService",
	HandlerType: (*JobsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Health",
			Handler:    _JobsService_Health_Handler,
		},
		{
			MethodName: "CreateJob",
			Handler:    _JobsService_CreateJob_Handler,
		},
		{
			MethodName: "GetJob",
			Handler:    _JobsService_GetJob_Handler,
		},
		{
			MethodName: "GetJobStatus",
			Handler:    _JobsService_GetJobStatus_Handler,
		},
		{
			MethodName: "MarkJobAsCanceled",
			Handler:    _JobsService_MarkJobAsCanceled_Handler,
		},
		{
			MethodName: "MarkJobAsCompleted",
			Handler:    _JobsService_MarkJobAsCompleted_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transcoder/v1/jobs_service.proto",
}

func init() {
	proto.RegisterFile("transcoder/v1/jobs_service.proto", fileDescriptor_jobs_service_8e27dbfe9e838fe1)
}

var fileDescriptor_jobs_service_8e27dbfe9e838fe1 = []byte{
	// 867 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xdd, 0x8e, 0xdb, 0x44,
	0x14, 0x8e, 0x93, 0xd4, 0x49, 0x26, 0x5b, 0x48, 0x06, 0xa9, 0x09, 0xd9, 0x92, 0x18, 0xb3, 0x88,
	0x74, 0x25, 0xdb, 0x6c, 0x2a, 0xad, 0xd8, 0xc2, 0xcd, 0x6e, 0x55, 0x41, 0x56, 0xe2, 0xc6, 0x5d,
	0x09, 0x09, 0x84, 0x56, 0x63, 0x7b, 0xea, 0x35, 0xb1, 0x3d, 0xc6, 0x33, 0xc9, 0xaa, 0xad, 0x2a,
	0xa4, 0x0a, 0x89, 0x2b, 0x6e, 0x40, 0x48, 0xbc, 0x04, 0xef, 0xc1, 0x25, 0x12, 0x0f, 0xb0, 0x28,
	0xf0, 0x1c, 0x08, 0xcd, 0x78, 0xf2, 0xe3, 0xb4, 0x64, 0x13, 0xe8, 0x9d, 0x67, 0xce, 0xcf, 0xf7,
	0xcd, 0x77, 0xce, 0x9c, 0x31, 0xd0, 0x58, 0x8a, 0x62, 0xea, 0x12, 0x0f, 0xa7, 0xd6, 0xe4, 0xc0,
	0xfa, 0x8a, 0x38, 0xf4, 0x9c, 0xe2, 0x74, 0x12, 0xb8, 0xd8, 0x4c, 0x52, 0xc2, 0x08, 0xbc, 0x1d,
	0x06, 0x13, 0x9c, 0x84, 0x28, 0xc6, 0xcc, 0x44, 0x49, 0x60, 0x2e, 0x02, 0xcc, 0xc9, 0x41, 0x67,
	0xd7, 0x27, 0xc4, 0x0f, 0xb1, 0x25, 0x7c, 0x9d, 0xf1, 0x23, 0x0b, 0x47, 0x09, 0x7b, 0x9c, 0x85,
	0x76, 0x7a, 0xab, 0x46, 0x16, 0x44, 0x98, 0x32, 0x14, 0x25, 0xd2, 0xe1, 0xb6, 0x74, 0x40, 0x49,
	0x60, 0xa1, 0x38, 0x26, 0x0c, 0xb1, 0x80, 0xc4, 0x54, 0x5a, 0x0d, 0x3f, 0x60, 0x17, 0x63, 0xc7,
	0x74, 0x49, 0x64, 0xf9, 0xc4, 0x27, 0x8b, 0x3c, 0x7c, 0x25, 0x16, 0xe2, 0x4b, 0xba, 0x1f, 0x2e,
	0xb9, 0x47, 0x97, 0x01, 0x1b, 0x91, 0x4b, 0xcb, 0x27, 0x86, 0x30, 0x1a, 0x13, 0x14, 0x06, 0x1e,
	0x62, 0x24, 0xa5, 0xd6, 0xfc, 0x53, 0xc6, 0x35, 0xd2, 0xc4, 0xb5, 0x2e, 0x30, 0x0a, 0xd9, 0x85,
	0xdc, 0xe9, 0xe4, 0x45, 0xa1, 0x0c, 0xb1, 0xf1, 0x8c, 0x54, 0xeb, 0x05, 0xc1, 0xa4, 0xa1, 0x9d,
	0x37, 0x30, 0x44, 0x47, 0x99, 0x45, 0xff, 0xa5, 0x08, 0x1a, 0xf7, 0x53, 0x8c, 0x18, 0x3e, 0x25,
	0x8e, 0x8d, 0xbf, 0x1e, 0x63, 0xca, 0xe0, 0x21, 0xd8, 0x71, 0x52, 0x82, 0x3c, 0x17, 0x51, 0x76,
	0x1e, 0x78, 0x6d, 0x45, 0x53, 0xfa, 0xb5, 0x93, 0x37, 0xa6, 0x57, 0xbd, 0xd7, 0xc1, 0xcd, 0x2f,
	0x90, 0xf1, 0xe4, 0x7d, 0xe3, 0xc8, 0xf8, 0xf2, 0xe9, 0xdd, 0xc3, 0x67, 0x76, 0x7d, 0xee, 0x38,
	0xf4, 0x60, 0x1f, 0xd4, 0x93, 0x10, 0xb1, 0x47, 0x24, 0x8d, 0x78, 0x58, 0x51, 0x84, 0x55, 0xa6,
	0x57, 0xbd, 0x12, 0x50, 0x4c, 0x1b, 0xcc, 0x6c, 0x43, 0x0f, 0xf6, 0x40, 0x65, 0x4c, 0x71, 0xca,
	0xbd, 0x4a, 0x9a, 0xd2, 0xbf, 0x79, 0xa2, 0x4e, 0xaf, 0x7a, 0xc5, 0x46, 0xc1, 0x56, 0xf9, 0xf6,
	0xd0, 0x83, 0x6f, 0x82, 0x2a, 0x9e, 0xe0, 0x58, 0xc0, 0x97, 0x35, 0xa5, 0x5f, 0xb6, 0x2b, 0x62,
	0x3d, 0xf4, 0xe0, 0x2e, 0xa8, 0xb9, 0x28, 0xc2, 0x29, 0xe2, 0xb6, 0x0a, 0xc7, 0xb0, 0xab, 0xd9,
	0x86, 0x30, 0x96, 0x47, 0x41, 0xec, 0xb5, 0x6f, 0xe4, 0xb1, 0xc5, 0x26, 0x3c, 0x06, 0x65, 0x9a,
	0x60, 0xb7, 0xad, 0x6a, 0x4a, 0xbf, 0x3e, 0x78, 0xd7, 0x5c, 0xd7, 0x3d, 0xe6, 0x29, 0x71, 0x1e,
	0x26, 0xd8, 0xcd, 0x98, 0x69, 0x8a, 0x2d, 0x42, 0x75, 0x0b, 0x80, 0x25, 0xa1, 0xde, 0x7e, 0x99,
	0x50, 0x39, 0x4d, 0xf4, 0xbf, 0x8b, 0xa0, 0x2e, 0x22, 0x68, 0x42, 0x62, 0x8a, 0x37, 0x08, 0x81,
	0xbd, 0x97, 0xc8, 0x98, 0x53, 0xaf, 0xb5, 0xa2, 0xde, 0xd6, 0xaa, 0x81, 0x15, 0xd5, 0xe0, 0xb2,
	0x6a, 0x52, 0xac, 0xa3, 0xff, 0x20, 0x56, 0x26, 0x12, 0xbc, 0x05, 0xd4, 0xac, 0x2f, 0x65, 0x79,
	0xe4, 0x0a, 0x1e, 0x01, 0xe0, 0x8a, 0x5e, 0xf3, 0xce, 0x11, 0x6b, 0x57, 0x45, 0xe2, 0x8e, 0x99,
	0xdd, 0x33, 0x73, 0x76, 0x81, 0xcc, 0xb3, 0xd9, 0x45, 0xb4, 0x6b, 0xd2, 0xfb, 0x98, 0xc1, 0x0f,
	0xc0, 0x0d, 0xde, 0xb5, 0xb4, 0x5d, 0xd3, 0x4a, 0xfd, 0xfa, 0x40, 0x5f, 0x4f, 0xe7, 0x0c, 0xd1,
	0x91, 0x9d, 0x05, 0xe8, 0x14, 0x34, 0x38, 0x3b, 0xc1, 0x60, 0xf3, 0xba, 0xc1, 0x8f, 0xe6, 0x67,
	0xe0, 0xfa, 0xbf, 0x36, 0xd8, 0x5b, 0x8f, 0x28, 0xf3, 0xcb, 0x18, 0x9d, 0x81, 0xe6, 0x12, 0xe8,
	0xe6, 0xa5, 0xff, 0x7f, 0xa8, 0xdf, 0x2b, 0xa0, 0xc9, 0x8f, 0xbe, 0xf5, 0x61, 0x5b, 0xa0, 0xc2,
	0xc5, 0x5a, 0x74, 0x9b, 0xca, 0x97, 0x39, 0x3e, 0xa5, 0xed, 0xf9, 0x0c, 0x7e, 0x50, 0x45, 0xef,
	0xd3, 0x87, 0xd9, 0xd0, 0x86, 0x67, 0x40, 0xfd, 0x44, 0xcc, 0x32, 0x78, 0xeb, 0x85, 0xaa, 0x3f,
	0xe0, 0xb3, 0xb9, 0xa3, 0xad, 0xe6, 0x4f, 0x13, 0xd7, 0xcc, 0x62, 0xb2, 0xdc, 0x7a, 0xe3, 0xf9,
	0xef, 0x7f, 0xfd, 0x58, 0x04, 0xb0, 0x2a, 0xc7, 0xe2, 0x13, 0xf8, 0x0d, 0xa8, 0xcd, 0x27, 0x18,
	0x34, 0xd7, 0x13, 0x5c, 0x1d, 0x75, 0x9d, 0x3b, 0xd7, 0xf6, 0xf5, 0xac, 0x7c, 0x7a, 0x4b, 0x20,
	0x37, 0xf5, 0x1d, 0xf1, 0x24, 0xc8, 0x07, 0xe9, 0x9e, 0xb2, 0x0f, 0x9f, 0x2b, 0x40, 0xfd, 0x18,
	0x33, 0x0e, 0xdf, 0xdf, 0x20, 0xdd, 0xd6, 0xc0, 0xef, 0x08, 0xe0, 0xb7, 0xe0, 0xee, 0x32, 0xb0,
	0xf5, 0x74, 0xb9, 0xa8, 0xcf, 0xe0, 0x4f, 0x0a, 0xd8, 0xc9, 0x48, 0x64, 0x42, 0x6d, 0x41, 0xc5,
	0xba, 0xfe, 0x6e, 0xe7, 0x1a, 0x59, 0xdf, 0x17, 0x84, 0xf6, 0xa0, 0xbe, 0x86, 0x90, 0x7c, 0x99,
	0xe0, 0xb7, 0x0a, 0x68, 0x7e, 0x8a, 0xd2, 0xd1, 0x29, 0x71, 0x8e, 0xe9, 0x7d, 0x14, 0xbb, 0x38,
	0xc4, 0xde, 0x16, 0xe4, 0xfe, 0xa5, 0x53, 0x74, 0x43, 0x70, 0x78, 0x4f, 0x5f, 0xcb, 0xc1, 0x15,
	0x78, 0xbc, 0x46, 0xdf, 0x29, 0x00, 0x2e, 0x68, 0x90, 0x28, 0x09, 0x31, 0x7b, 0x25, 0x3c, 0x2c,
	0xc1, 0xe3, 0x8e, 0xbe, 0xb7, 0x96, 0x87, 0x04, 0xbc, 0xa7, 0xec, 0x9f, 0x7c, 0xf6, 0xeb, 0xb4,
	0x5b, 0xf8, 0x6d, 0xda, 0x2d, 0xfc, 0x31, 0xed, 0x16, 0x7e, 0xfe, 0xb3, 0x5b, 0xf8, 0xfc, 0xc1,
	0xd2, 0xcf, 0x41, 0x8a, 0x51, 0x18, 0xb0, 0xc7, 0x46, 0x88, 0x1c, 0x23, 0xc6, 0xec, 0x92, 0xa4,
	0x23, 0x6a, 0x2d, 0x38, 0x1a, 0x1c, 0xc4, 0xc7, 0xb1, 0x4f, 0xac, 0xdc, 0x93, 0xfe, 0xe1, 0xe4,
	0xc0, 0x51, 0x05, 0xb3, 0xbb, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0xbb, 0x8f, 0x89, 0x07, 0x37,
	0x09, 0x00, 0x00,
}
