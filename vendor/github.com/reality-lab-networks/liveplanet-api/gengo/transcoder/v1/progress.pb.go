// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: transcoder/v1/progress.proto

package v1 // import "github.com/reality-lab-networks/liveplanet-api/gengo/transcoder/v1"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TranscodeProgress struct {
	BroadcastId          string   `protobuf:"bytes,1,opt,name=broadcast_id,json=broadcastId,proto3" json:"broadcast_id,omitempty"`
	VariantId            string   `protobuf:"bytes,2,opt,name=variant_id,json=variantId,proto3" json:"variant_id,omitempty"`
	Frame                uint64   `protobuf:"varint,3,opt,name=frame,proto3" json:"frame,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TranscodeProgress) Reset()         { *m = TranscodeProgress{} }
func (m *TranscodeProgress) String() string { return proto.CompactTextString(m) }
func (*TranscodeProgress) ProtoMessage()    {}
func (*TranscodeProgress) Descriptor() ([]byte, []int) {
	return fileDescriptor_progress_8eabb5af733279b9, []int{0}
}
func (m *TranscodeProgress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TranscodeProgress.Unmarshal(m, b)
}
func (m *TranscodeProgress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TranscodeProgress.Marshal(b, m, deterministic)
}
func (dst *TranscodeProgress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TranscodeProgress.Merge(dst, src)
}
func (m *TranscodeProgress) XXX_Size() int {
	return xxx_messageInfo_TranscodeProgress.Size(m)
}
func (m *TranscodeProgress) XXX_DiscardUnknown() {
	xxx_messageInfo_TranscodeProgress.DiscardUnknown(m)
}

var xxx_messageInfo_TranscodeProgress proto.InternalMessageInfo

func (m *TranscodeProgress) GetBroadcastId() string {
	if m != nil {
		return m.BroadcastId
	}
	return ""
}

func (m *TranscodeProgress) GetVariantId() string {
	if m != nil {
		return m.VariantId
	}
	return ""
}

func (m *TranscodeProgress) GetFrame() uint64 {
	if m != nil {
		return m.Frame
	}
	return 0
}

func init() {
	proto.RegisterType((*TranscodeProgress)(nil), "liveplanet.api.transcoder.v1.TranscodeProgress")
}

func init() {
	proto.RegisterFile("transcoder/v1/progress.proto", fileDescriptor_progress_8eabb5af733279b9)
}

var fileDescriptor_progress_8eabb5af733279b9 = []byte{
	// 250 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x29, 0x29, 0x4a, 0xcc,
	0x2b, 0x4e, 0xce, 0x4f, 0x49, 0x2d, 0xd2, 0x2f, 0x33, 0xd4, 0x2f, 0x28, 0xca, 0x4f, 0x2f, 0x4a,
	0x2d, 0x2e, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x92, 0xc9, 0xc9, 0x2c, 0x4b, 0x2d, 0xc8,
	0x49, 0xcc, 0x4b, 0x2d, 0xd1, 0x4b, 0x2c, 0xc8, 0xd4, 0x43, 0x28, 0xd6, 0x2b, 0x33, 0x94, 0xd2,
	0x4d, 0xcf, 0x2c, 0xc9, 0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x4f, 0xcf, 0x4f, 0xcf, 0xd7,
	0x07, 0x6b, 0x4a, 0x2a, 0x4d, 0x03, 0xf3, 0xc0, 0x1c, 0x30, 0x0b, 0x62, 0x98, 0x52, 0x36, 0x97,
	0x60, 0x08, 0x4c, 0x7f, 0x00, 0xd4, 0x1e, 0x21, 0x45, 0x2e, 0x9e, 0xa4, 0xa2, 0xfc, 0xc4, 0x94,
	0xe4, 0xc4, 0xe2, 0x92, 0xf8, 0xcc, 0x14, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x6e, 0xb8,
	0x98, 0x67, 0x8a, 0x90, 0x2c, 0x17, 0x57, 0x59, 0x62, 0x51, 0x66, 0x62, 0x1e, 0x58, 0x01, 0x13,
	0x58, 0x01, 0x27, 0x54, 0xc4, 0x33, 0x45, 0x48, 0x84, 0x8b, 0x35, 0xad, 0x28, 0x31, 0x37, 0x55,
	0x82, 0x59, 0x81, 0x51, 0x83, 0x25, 0x08, 0xc2, 0x71, 0x0a, 0x3f, 0xf1, 0x48, 0x8e, 0xe1, 0xc2,
	0x23, 0x39, 0x86, 0x07, 0x8f, 0xe4, 0x18, 0x66, 0x3c, 0x96, 0x63, 0x88, 0x72, 0x45, 0x72, 0x6d,
	0x51, 0x6a, 0x62, 0x4e, 0x66, 0x49, 0xa5, 0x6e, 0x4e, 0x62, 0x92, 0x6e, 0x5e, 0x6a, 0x49, 0x79,
	0x7e, 0x51, 0x76, 0xb1, 0x3e, 0xc2, 0xaf, 0xba, 0x89, 0x05, 0x99, 0xfa, 0xe9, 0xa9, 0x79, 0xe9,
	0xf9, 0xfa, 0x28, 0xc1, 0x63, 0x5d, 0x66, 0x98, 0xc4, 0x06, 0xf6, 0x8c, 0x31, 0x20, 0x00, 0x00,
	0xff, 0xff, 0x80, 0xad, 0x83, 0xf7, 0x39, 0x01, 0x00, 0x00,
}
