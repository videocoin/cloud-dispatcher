// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: transcoder/v1/playlist.proto

package v1 // import "github.com/reality-lab-networks/liveplanet-api/gengo/transcoder/v1"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "github.com/mwitkow/go-proto-validators"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Playlist struct {
	Kind                 string             `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	ProjectionType       string             `protobuf:"bytes,2,opt,name=projection_type,json=projectionType,proto3" json:"projection_type,omitempty"`
	StereoFormat         string             `protobuf:"bytes,3,opt,name=stereo_format,json=stereoFormat,proto3" json:"stereo_format,omitempty"`
	CubemapFaceOrder     string             `protobuf:"bytes,4,opt,name=cubemap_face_order,json=cubemapFaceOrder,proto3" json:"cubemap_face_order,omitempty"`
	Smoothstep           bool               `protobuf:"varint,5,opt,name=smoothstep,proto3" json:"smoothstep,omitempty"`
	Variants             []*PlaylistVariant `protobuf:"bytes,6,rep,name=variants,proto3" json:"variants,omitempty"`
	Metadata             *Metadata          `protobuf:"bytes,7,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Bucket               string             `protobuf:"bytes,8,opt,name=bucket,proto3" json:"bucket,omitempty"`
	ObjectName           string             `protobuf:"bytes,9,opt,name=object_name,json=objectName,proto3" json:"object_name,omitempty"`
	Url                  string             `protobuf:"bytes,10,opt,name=url,proto3" json:"url,omitempty"`
	IsLive               bool               `protobuf:"varint,11,opt,name=is_live,json=isLive,proto3" json:"is_live,omitempty"`
	CdnHost              string             `protobuf:"bytes,12,opt,name=cdn_host,json=cdnHost,proto3" json:"cdn_host,omitempty"`
	CdnUrl               string             `protobuf:"bytes,13,opt,name=cdn_url,json=cdnUrl,proto3" json:"cdn_url,omitempty"`
	BottomCap            bool               `protobuf:"varint,14,opt,name=bottom_cap,json=bottomCap,proto3" json:"bottom_cap,omitempty"`
	MpVersion            uint32             `protobuf:"varint,15,opt,name=mp_version,json=mpVersion,proto3" json:"mp_version,omitempty"`
	SmartSampling        bool               `protobuf:"varint,16,opt,name=smart_sampling,json=smartSampling,proto3" json:"smart_sampling,omitempty"`
	CuboidWidth          uint32             `protobuf:"varint,17,opt,name=cuboid_width,json=cuboidWidth,proto3" json:"cuboid_width,omitempty"`
	CuboidHeight         uint32             `protobuf:"varint,18,opt,name=cuboid_height,json=cuboidHeight,proto3" json:"cuboid_height,omitempty"`
	CuboidTbLength       uint32             `protobuf:"varint,19,opt,name=cuboid_tb_length,json=cuboidTbLength,proto3" json:"cuboid_tb_length,omitempty"`
	Gop                  uint32             `protobuf:"varint,20,opt,name=gop,proto3" json:"gop,omitempty"`
	FrameRate            float64            `protobuf:"fixed64,21,opt,name=frame_rate,json=frameRate,proto3" json:"frame_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Playlist) Reset()         { *m = Playlist{} }
func (m *Playlist) String() string { return proto.CompactTextString(m) }
func (*Playlist) ProtoMessage()    {}
func (*Playlist) Descriptor() ([]byte, []int) {
	return fileDescriptor_playlist_ad9fdb4a6af49579, []int{0}
}
func (m *Playlist) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Playlist.Unmarshal(m, b)
}
func (m *Playlist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Playlist.Marshal(b, m, deterministic)
}
func (dst *Playlist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Playlist.Merge(dst, src)
}
func (m *Playlist) XXX_Size() int {
	return xxx_messageInfo_Playlist.Size(m)
}
func (m *Playlist) XXX_DiscardUnknown() {
	xxx_messageInfo_Playlist.DiscardUnknown(m)
}

var xxx_messageInfo_Playlist proto.InternalMessageInfo

func (m *Playlist) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Playlist) GetProjectionType() string {
	if m != nil {
		return m.ProjectionType
	}
	return ""
}

func (m *Playlist) GetStereoFormat() string {
	if m != nil {
		return m.StereoFormat
	}
	return ""
}

func (m *Playlist) GetCubemapFaceOrder() string {
	if m != nil {
		return m.CubemapFaceOrder
	}
	return ""
}

func (m *Playlist) GetSmoothstep() bool {
	if m != nil {
		return m.Smoothstep
	}
	return false
}

func (m *Playlist) GetVariants() []*PlaylistVariant {
	if m != nil {
		return m.Variants
	}
	return nil
}

func (m *Playlist) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Playlist) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *Playlist) GetObjectName() string {
	if m != nil {
		return m.ObjectName
	}
	return ""
}

func (m *Playlist) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Playlist) GetIsLive() bool {
	if m != nil {
		return m.IsLive
	}
	return false
}

func (m *Playlist) GetCdnHost() string {
	if m != nil {
		return m.CdnHost
	}
	return ""
}

func (m *Playlist) GetCdnUrl() string {
	if m != nil {
		return m.CdnUrl
	}
	return ""
}

func (m *Playlist) GetBottomCap() bool {
	if m != nil {
		return m.BottomCap
	}
	return false
}

func (m *Playlist) GetMpVersion() uint32 {
	if m != nil {
		return m.MpVersion
	}
	return 0
}

func (m *Playlist) GetSmartSampling() bool {
	if m != nil {
		return m.SmartSampling
	}
	return false
}

func (m *Playlist) GetCuboidWidth() uint32 {
	if m != nil {
		return m.CuboidWidth
	}
	return 0
}

func (m *Playlist) GetCuboidHeight() uint32 {
	if m != nil {
		return m.CuboidHeight
	}
	return 0
}

func (m *Playlist) GetCuboidTbLength() uint32 {
	if m != nil {
		return m.CuboidTbLength
	}
	return 0
}

func (m *Playlist) GetGop() uint32 {
	if m != nil {
		return m.Gop
	}
	return 0
}

func (m *Playlist) GetFrameRate() float64 {
	if m != nil {
		return m.FrameRate
	}
	return 0
}

type PlaylistVariant struct {
	Bitrate              uint32   `protobuf:"varint,1,opt,name=bitrate,proto3" json:"bitrate,omitempty"`
	ExpandCoef           float32  `protobuf:"fixed32,2,opt,name=expand_coef,json=expandCoef,proto3" json:"expand_coef,omitempty"`
	OffsetZ              float32  `protobuf:"fixed32,3,opt,name=offset_z,json=offsetZ,proto3" json:"offset_z,omitempty"`
	Yaw                  uint32   `protobuf:"varint,4,opt,name=yaw,proto3" json:"yaw,omitempty"`
	Padding              float32  `protobuf:"fixed32,5,opt,name=padding,proto3" json:"padding,omitempty"`
	Width                uint32   `protobuf:"varint,6,opt,name=width,proto3" json:"width,omitempty"`
	Height               uint32   `protobuf:"varint,7,opt,name=height,proto3" json:"height,omitempty"`
	CuboidWidth          uint32   `protobuf:"varint,8,opt,name=cuboid_width,json=cuboidWidth,proto3" json:"cuboid_width,omitempty"`
	CuboidHeight         uint32   `protobuf:"varint,9,opt,name=cuboid_height,json=cuboidHeight,proto3" json:"cuboid_height,omitempty"`
	CuboidTbLength       uint32   `protobuf:"varint,10,opt,name=cuboid_tb_length,json=cuboidTbLength,proto3" json:"cuboid_tb_length,omitempty"`
	Gop                  uint32   `protobuf:"varint,11,opt,name=gop,proto3" json:"gop,omitempty"`
	FrameRate            float64  `protobuf:"fixed64,12,opt,name=frame_rate,json=frameRate,proto3" json:"frame_rate,omitempty"`
	StereoFormat         string   `protobuf:"bytes,13,opt,name=stereo_format,json=stereoFormat,proto3" json:"stereo_format,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlaylistVariant) Reset()         { *m = PlaylistVariant{} }
func (m *PlaylistVariant) String() string { return proto.CompactTextString(m) }
func (*PlaylistVariant) ProtoMessage()    {}
func (*PlaylistVariant) Descriptor() ([]byte, []int) {
	return fileDescriptor_playlist_ad9fdb4a6af49579, []int{1}
}
func (m *PlaylistVariant) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlaylistVariant.Unmarshal(m, b)
}
func (m *PlaylistVariant) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlaylistVariant.Marshal(b, m, deterministic)
}
func (dst *PlaylistVariant) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlaylistVariant.Merge(dst, src)
}
func (m *PlaylistVariant) XXX_Size() int {
	return xxx_messageInfo_PlaylistVariant.Size(m)
}
func (m *PlaylistVariant) XXX_DiscardUnknown() {
	xxx_messageInfo_PlaylistVariant.DiscardUnknown(m)
}

var xxx_messageInfo_PlaylistVariant proto.InternalMessageInfo

func (m *PlaylistVariant) GetBitrate() uint32 {
	if m != nil {
		return m.Bitrate
	}
	return 0
}

func (m *PlaylistVariant) GetExpandCoef() float32 {
	if m != nil {
		return m.ExpandCoef
	}
	return 0
}

func (m *PlaylistVariant) GetOffsetZ() float32 {
	if m != nil {
		return m.OffsetZ
	}
	return 0
}

func (m *PlaylistVariant) GetYaw() uint32 {
	if m != nil {
		return m.Yaw
	}
	return 0
}

func (m *PlaylistVariant) GetPadding() float32 {
	if m != nil {
		return m.Padding
	}
	return 0
}

func (m *PlaylistVariant) GetWidth() uint32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *PlaylistVariant) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *PlaylistVariant) GetCuboidWidth() uint32 {
	if m != nil {
		return m.CuboidWidth
	}
	return 0
}

func (m *PlaylistVariant) GetCuboidHeight() uint32 {
	if m != nil {
		return m.CuboidHeight
	}
	return 0
}

func (m *PlaylistVariant) GetCuboidTbLength() uint32 {
	if m != nil {
		return m.CuboidTbLength
	}
	return 0
}

func (m *PlaylistVariant) GetGop() uint32 {
	if m != nil {
		return m.Gop
	}
	return 0
}

func (m *PlaylistVariant) GetFrameRate() float64 {
	if m != nil {
		return m.FrameRate
	}
	return 0
}

func (m *PlaylistVariant) GetStereoFormat() string {
	if m != nil {
		return m.StereoFormat
	}
	return ""
}

type PlaylistSegment struct {
	BroadcastId          string   `protobuf:"bytes,1,opt,name=broadcast_id,json=broadcastId,proto3" json:"broadcast_id,omitempty"`
	VariantId            string   `protobuf:"bytes,2,opt,name=variant_id,json=variantId,proto3" json:"variant_id,omitempty"`
	Num                  uint64   `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Duration             float64  `protobuf:"fixed64,5,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlaylistSegment) Reset()         { *m = PlaylistSegment{} }
func (m *PlaylistSegment) String() string { return proto.CompactTextString(m) }
func (*PlaylistSegment) ProtoMessage()    {}
func (*PlaylistSegment) Descriptor() ([]byte, []int) {
	return fileDescriptor_playlist_ad9fdb4a6af49579, []int{2}
}
func (m *PlaylistSegment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlaylistSegment.Unmarshal(m, b)
}
func (m *PlaylistSegment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlaylistSegment.Marshal(b, m, deterministic)
}
func (dst *PlaylistSegment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlaylistSegment.Merge(dst, src)
}
func (m *PlaylistSegment) XXX_Size() int {
	return xxx_messageInfo_PlaylistSegment.Size(m)
}
func (m *PlaylistSegment) XXX_DiscardUnknown() {
	xxx_messageInfo_PlaylistSegment.DiscardUnknown(m)
}

var xxx_messageInfo_PlaylistSegment proto.InternalMessageInfo

func (m *PlaylistSegment) GetBroadcastId() string {
	if m != nil {
		return m.BroadcastId
	}
	return ""
}

func (m *PlaylistSegment) GetVariantId() string {
	if m != nil {
		return m.VariantId
	}
	return ""
}

func (m *PlaylistSegment) GetNum() uint64 {
	if m != nil {
		return m.Num
	}
	return 0
}

func (m *PlaylistSegment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PlaylistSegment) GetDuration() float64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func init() {
	proto.RegisterType((*Playlist)(nil), "liveplanet.api.transcoder.v1.Playlist")
	proto.RegisterType((*PlaylistVariant)(nil), "liveplanet.api.transcoder.v1.PlaylistVariant")
	proto.RegisterType((*PlaylistSegment)(nil), "liveplanet.api.transcoder.v1.PlaylistSegment")
}

func init() {
	proto.RegisterFile("transcoder/v1/playlist.proto", fileDescriptor_playlist_ad9fdb4a6af49579)
}

var fileDescriptor_playlist_ad9fdb4a6af49579 = []byte{
	// 841 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xdd, 0x6e, 0x23, 0x35,
	0x14, 0xee, 0x34, 0x6d, 0x26, 0x71, 0x9a, 0x36, 0x98, 0x05, 0x4c, 0xb5, 0x64, 0x43, 0xd1, 0x42,
	0x2e, 0x48, 0x46, 0x5d, 0x24, 0x6e, 0xb8, 0xeb, 0x8a, 0xd5, 0x56, 0x5a, 0x7e, 0x34, 0xbb, 0xec,
	0x4a, 0x7b, 0x33, 0xf2, 0x8c, 0x9d, 0x89, 0xe9, 0x8c, 0x6d, 0xd9, 0x4e, 0x42, 0x78, 0x00, 0xde,
	0x00, 0xc4, 0x23, 0x71, 0x09, 0x4f, 0x00, 0x2a, 0x17, 0x88, 0xb7, 0x40, 0x3e, 0x9e, 0xa6, 0xa5,
	0xd5, 0x56, 0xbd, 0x3b, 0xe7, 0x3b, 0xdf, 0x39, 0x63, 0x7f, 0x3e, 0xf3, 0xa1, 0xfb, 0xce, 0x50,
	0x69, 0x0b, 0xc5, 0xb8, 0x49, 0x96, 0xc7, 0x89, 0xae, 0xe8, 0xba, 0x12, 0xd6, 0x4d, 0xb5, 0x51,
	0x4e, 0xe1, 0xfb, 0x95, 0x58, 0x72, 0x5d, 0x51, 0xc9, 0xdd, 0x94, 0x6a, 0x31, 0xbd, 0x24, 0x4f,
	0x97, 0xc7, 0x87, 0x93, 0x52, 0xb8, 0xf9, 0x22, 0x9f, 0x16, 0xaa, 0x4e, 0x4a, 0x55, 0xaa, 0x04,
	0x9a, 0xf2, 0xc5, 0x0c, 0x32, 0x48, 0x20, 0x0a, 0xc3, 0x0e, 0x3f, 0xbf, 0x42, 0xaf, 0x57, 0xc2,
	0x9d, 0xa9, 0x55, 0x52, 0xaa, 0x09, 0x14, 0x27, 0x4b, 0x5a, 0x09, 0x46, 0x9d, 0x32, 0x36, 0xd9,
	0x84, 0x4d, 0xdf, 0xb5, 0x23, 0xd6, 0xdc, 0x51, 0x46, 0x1d, 0x0d, 0xd5, 0xa3, 0x7f, 0x77, 0x51,
	0xe7, 0xdb, 0xe6, 0xd4, 0x18, 0xa3, 0x9d, 0x33, 0x21, 0x19, 0x89, 0x46, 0xd1, 0xb8, 0x9b, 0x42,
	0x8c, 0x3f, 0x41, 0x07, 0xda, 0xa8, 0xef, 0x79, 0xe1, 0x84, 0x92, 0x99, 0x5b, 0x6b, 0x4e, 0xb6,
	0xa1, 0xbc, 0x7f, 0x09, 0xbf, 0x58, 0x6b, 0x8e, 0x3f, 0x42, 0x7d, 0xeb, 0xb8, 0xe1, 0x2a, 0x9b,
	0x29, 0x53, 0x53, 0x47, 0x5a, 0x40, 0xdb, 0x0b, 0xe0, 0x13, 0xc0, 0xf0, 0xa7, 0x08, 0x17, 0x8b,
	0x9c, 0xd7, 0x54, 0x67, 0x33, 0x5a, 0xf0, 0x4c, 0x19, 0xc6, 0x0d, 0xd9, 0x01, 0xe6, 0xa0, 0xa9,
	0x3c, 0xa1, 0x05, 0xff, 0xc6, 0xe3, 0x78, 0x88, 0x90, 0xad, 0x95, 0x72, 0x73, 0xeb, 0xb8, 0x26,
	0xbb, 0xa3, 0x68, 0xdc, 0x49, 0xaf, 0x20, 0xf8, 0x14, 0x75, 0x96, 0xd4, 0x08, 0x2a, 0x9d, 0x25,
	0xed, 0x51, 0x6b, 0xdc, 0x7b, 0x34, 0x99, 0xde, 0x26, 0xf9, 0xf4, 0xe2, 0xa6, 0x2f, 0x43, 0x57,
	0xba, 0x69, 0xc7, 0x27, 0xa8, 0x73, 0xa1, 0x0c, 0x89, 0x47, 0xd1, 0xb8, 0xf7, 0xe8, 0xe3, 0xdb,
	0x47, 0x7d, 0xd5, 0xb0, 0xd3, 0x4d, 0x1f, 0x7e, 0x17, 0xb5, 0xf3, 0x45, 0x71, 0xc6, 0x1d, 0xe9,
	0xc0, 0x85, 0x9a, 0x0c, 0x3f, 0x40, 0x3d, 0x95, 0x7b, 0xa9, 0x32, 0x49, 0x6b, 0x4e, 0xba, 0x50,
	0x44, 0x01, 0xfa, 0x9a, 0xd6, 0x1c, 0x0f, 0x50, 0x6b, 0x61, 0x2a, 0x82, 0xa0, 0xe0, 0x43, 0xfc,
	0x1e, 0x8a, 0x85, 0xcd, 0xfc, 0x01, 0x48, 0x0f, 0xae, 0xdd, 0x16, 0xf6, 0x99, 0x58, 0x72, 0xfc,
	0x3e, 0xea, 0x14, 0x4c, 0x66, 0x73, 0x65, 0x1d, 0xd9, 0x03, 0x7e, 0x5c, 0x30, 0xf9, 0x54, 0x59,
	0xe7, 0x7b, 0x7c, 0xc9, 0x4f, 0xea, 0x87, 0xef, 0x17, 0x4c, 0x7e, 0x67, 0x2a, 0xfc, 0x01, 0x42,
	0xb9, 0x72, 0x4e, 0xd5, 0x59, 0x41, 0x35, 0xd9, 0x87, 0x79, 0xdd, 0x80, 0x3c, 0xa6, 0xda, 0x97,
	0x6b, 0x9d, 0x2d, 0xb9, 0xb1, 0x42, 0x49, 0x72, 0x30, 0x8a, 0xc6, 0xfd, 0xb4, 0x5b, 0xeb, 0x97,
	0x01, 0xc0, 0x0f, 0xd1, 0xbe, 0xad, 0xa9, 0x71, 0x99, 0xa5, 0xb5, 0xae, 0x84, 0x2c, 0xc9, 0x00,
	0x26, 0xf4, 0x01, 0x7d, 0xde, 0x80, 0xf8, 0x43, 0xb4, 0x57, 0x2c, 0x72, 0x25, 0x58, 0xb6, 0x12,
	0xcc, 0xcd, 0xc9, 0x5b, 0x30, 0xa7, 0x17, 0xb0, 0x57, 0x1e, 0xf2, 0x1b, 0xd2, 0x50, 0xe6, 0x5c,
	0x94, 0x73, 0x47, 0x30, 0x70, 0x9a, 0xbe, 0xa7, 0x80, 0xe1, 0x31, 0x1a, 0x34, 0x24, 0x97, 0x67,
	0x15, 0x97, 0xa5, 0x9b, 0x93, 0xb7, 0x81, 0xb7, 0x1f, 0xf0, 0x17, 0xf9, 0x33, 0x40, 0xbd, 0x6a,
	0xa5, 0xd2, 0xe4, 0x1e, 0x14, 0x7d, 0xe8, 0x6f, 0x32, 0x33, 0xb4, 0xe6, 0x99, 0xa1, 0x8e, 0x93,
	0x77, 0x46, 0xd1, 0x38, 0x4a, 0xbb, 0x80, 0xa4, 0xd4, 0xf1, 0xa3, 0x5f, 0x5a, 0xe8, 0xe0, 0xda,
	0x06, 0xe0, 0x87, 0x28, 0xce, 0x85, 0x03, 0xbe, 0xdf, 0xfa, 0xfe, 0x49, 0xef, 0xfc, 0xcf, 0x07,
	0xf1, 0xe0, 0x9f, 0x98, 0xfc, 0xf1, 0x53, 0x2b, 0xbd, 0xa8, 0xf9, 0x27, 0xe4, 0x3f, 0x68, 0x2a,
	0x59, 0x56, 0x28, 0x3e, 0x83, 0x3f, 0x60, 0x3b, 0x45, 0x01, 0x7a, 0xac, 0xf8, 0xcc, 0xbf, 0x8b,
	0x9a, 0xcd, 0x2c, 0x77, 0xd9, 0x8f, 0xb0, 0xf8, 0xdb, 0x69, 0x1c, 0xf2, 0xd7, 0xfe, 0x9c, 0x6b,
	0xba, 0x82, 0x25, 0xef, 0xa7, 0x3e, 0xc4, 0x04, 0xc5, 0x9a, 0x32, 0xe6, 0xb5, 0xdc, 0x0d, 0xdc,
	0x26, 0xc5, 0xf7, 0xd0, 0x6e, 0x90, 0xaf, 0x0d, 0xec, 0x90, 0xf8, 0xc5, 0x6a, 0x14, 0x8b, 0x01,
	0x6e, 0xb2, 0x1b, 0x9a, 0x77, 0xee, 0xa0, 0x79, 0xf7, 0x8e, 0x9a, 0xa3, 0xdb, 0x34, 0xef, 0xbd,
	0x49, 0xf3, 0xbd, 0x6b, 0x9a, 0xdf, 0x74, 0x85, 0xfe, 0x4d, 0x57, 0x38, 0xfa, 0x39, 0xba, 0x7c,
	0x98, 0xe7, 0xbc, 0xac, 0xb9, 0x84, 0xbb, 0xe5, 0x46, 0x51, 0x56, 0x50, 0xeb, 0x32, 0x71, 0xe1,
	0x49, 0xbd, 0x0d, 0x76, 0xca, 0xfc, 0xa7, 0x9b, 0xff, 0xd7, 0x13, 0x82, 0x2b, 0x75, 0x1b, 0xe4,
	0x94, 0xf9, 0xb3, 0xca, 0x45, 0x0d, 0xaf, 0xb1, 0x93, 0xfa, 0xd0, 0xfb, 0x1b, 0xfc, 0x81, 0xc1,
	0x6f, 0x20, 0xc6, 0x87, 0xa8, 0xc3, 0x16, 0x86, 0x7a, 0x1b, 0x83, 0xc7, 0x88, 0xd2, 0x4d, 0x7e,
	0xf2, 0xea, 0xb7, 0xf3, 0xe1, 0xd6, 0xef, 0xe7, 0xc3, 0xad, 0xbf, 0xce, 0x87, 0x5b, 0xbf, 0xfe,
	0x3d, 0xdc, 0x7a, 0xfd, 0xe5, 0x15, 0x13, 0x36, 0x9c, 0x56, 0xc2, 0xad, 0x27, 0x15, 0xcd, 0x27,
	0x92, 0xbb, 0x95, 0x32, 0x67, 0x36, 0xb9, 0xf4, 0x8c, 0x09, 0xd5, 0x22, 0x29, 0xb9, 0x2c, 0x55,
	0xf2, 0x3f, 0x07, 0xfe, 0x62, 0x79, 0x9c, 0xb7, 0xc1, 0x7c, 0x3f, 0xfb, 0x2f, 0x00, 0x00, 0xff,
	0xff, 0x43, 0x58, 0x1a, 0x27, 0x3f, 0x06, 0x00, 0x00,
}
