// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: transcoder/v1/metadata.proto

package v1 // import "github.com/reality-lab-networks/liveplanet-api/gengo/transcoder/v1"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "github.com/mwitkow/go-proto-validators"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Metadata struct {
	UserId               uint32   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	BroadcastId          string   `protobuf:"bytes,2,opt,name=broadcast_id,json=broadcastId,proto3" json:"broadcast_id,omitempty"`
	TaskId               string   `protobuf:"bytes,3,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	PlatformId           string   `protobuf:"bytes,4,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	VariantId            string   `protobuf:"bytes,5,opt,name=variant_id,json=variantId,proto3" json:"variant_id,omitempty"`
	CameraId             string   `protobuf:"bytes,6,opt,name=camera_id,json=cameraId,proto3" json:"camera_id,omitempty"`
	StreamId             string   `protobuf:"bytes,7,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	EventId              uint64   `protobuf:"varint,8,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	IsLive               bool     `protobuf:"varint,9,opt,name=is_live,json=isLive,proto3" json:"is_live,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_metadata_9de20cbfe631ed87, []int{0}
}
func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (dst *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(dst, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Metadata) GetBroadcastId() string {
	if m != nil {
		return m.BroadcastId
	}
	return ""
}

func (m *Metadata) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *Metadata) GetPlatformId() string {
	if m != nil {
		return m.PlatformId
	}
	return ""
}

func (m *Metadata) GetVariantId() string {
	if m != nil {
		return m.VariantId
	}
	return ""
}

func (m *Metadata) GetCameraId() string {
	if m != nil {
		return m.CameraId
	}
	return ""
}

func (m *Metadata) GetStreamId() string {
	if m != nil {
		return m.StreamId
	}
	return ""
}

func (m *Metadata) GetEventId() uint64 {
	if m != nil {
		return m.EventId
	}
	return 0
}

func (m *Metadata) GetIsLive() bool {
	if m != nil {
		return m.IsLive
	}
	return false
}

func init() {
	proto.RegisterType((*Metadata)(nil), "liveplanet.api.transcoder.v1.Metadata")
}

func init() {
	proto.RegisterFile("transcoder/v1/metadata.proto", fileDescriptor_metadata_9de20cbfe631ed87)
}

var fileDescriptor_metadata_9de20cbfe631ed87 = []byte{
	// 408 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x52, 0xcf, 0x6e, 0xd3, 0x30,
	0x18, 0x4f, 0xba, 0x91, 0xa4, 0x1e, 0x13, 0x28, 0x1c, 0x18, 0x63, 0xb4, 0x15, 0xa7, 0x5c, 0x1c,
	0x53, 0x4d, 0xaa, 0x84, 0xb8, 0x55, 0xe2, 0x10, 0x09, 0x2e, 0xb9, 0x20, 0x81, 0xd0, 0xf4, 0x25,
	0xf6, 0x82, 0xd5, 0x24, 0x8e, 0x6c, 0xd7, 0x15, 0x20, 0xde, 0x83, 0xf7, 0xe0, 0x25, 0x38, 0xf2,
	0x06, 0x45, 0xe1, 0x45, 0x90, 0xed, 0xb1, 0x95, 0x9b, 0x7f, 0x7f, 0xbf, 0x4f, 0xf9, 0x82, 0x2e,
	0xb4, 0x84, 0x5e, 0xd5, 0x82, 0x32, 0x49, 0xcc, 0x92, 0x74, 0x4c, 0x03, 0x05, 0x0d, 0xf9, 0x20,
	0x85, 0x16, 0xe9, 0x45, 0xcb, 0x0d, 0x1b, 0x5a, 0xe8, 0x99, 0xce, 0x61, 0xe0, 0xf9, 0x9d, 0x39,
	0x37, 0xcb, 0x73, 0xdc, 0x70, 0xfd, 0x69, 0x5b, 0xe5, 0xb5, 0xe8, 0x48, 0x23, 0x1a, 0x41, 0x5c,
	0xa8, 0xda, 0x5e, 0x3b, 0xe4, 0x80, 0x7b, 0xf9, 0xb2, 0xf3, 0xd5, 0x81, 0xbd, 0xdb, 0x71, 0xbd,
	0x11, 0x3b, 0xd2, 0x08, 0xec, 0x44, 0x6c, 0xa0, 0xe5, 0x14, 0xb4, 0x90, 0x8a, 0xdc, 0x3e, 0x7d,
	0xee, 0xf9, 0x8f, 0x09, 0x4a, 0xde, 0xde, 0xec, 0x95, 0xce, 0x51, 0xbc, 0x55, 0x4c, 0x5e, 0x71,
	0x7a, 0x16, 0x2e, 0xc2, 0xec, 0x74, 0x1d, 0x8d, 0xfb, 0xf9, 0xe4, 0x61, 0x50, 0x46, 0x96, 0x2e,
	0x68, 0xba, 0x42, 0xf7, 0x2b, 0x29, 0x80, 0xd6, 0xa0, 0xb4, 0x75, 0x4d, 0x16, 0x61, 0x36, 0x5d,
	0x3f, 0x1a, 0xf7, 0xf3, 0x07, 0xe8, 0xf4, 0x03, 0xe0, 0x2f, 0x2f, 0xf0, 0x4b, 0xfc, 0xf1, 0xeb,
	0xe5, 0xea, 0x5b, 0x79, 0x72, 0x6b, 0x2c, 0x68, 0xfa, 0x18, 0xc5, 0x1a, 0xd4, 0xc6, 0x46, 0x8e,
	0x6c, 0xa4, 0x8c, 0x2c, 0x2c, 0x68, 0x9a, 0xa1, 0x93, 0xa1, 0x05, 0x7d, 0x2d, 0x64, 0x67, 0xc5,
	0x63, 0xd7, 0x17, 0x8f, 0xfb, 0xf9, 0x11, 0x0a, 0xf3, 0x12, 0xfd, 0xd3, 0x0a, 0x9a, 0x3e, 0x43,
	0xc8, 0x80, 0xe4, 0xd0, 0xbb, 0xc1, 0xf7, 0x5c, 0xcb, 0xf4, 0x86, 0x29, 0x68, 0xfa, 0x14, 0x4d,
	0x6b, 0xe8, 0x98, 0x04, 0xab, 0x46, 0x4e, 0x4d, 0x3c, 0xe1, 0x45, 0xa5, 0x25, 0x03, 0x37, 0x23,
	0xf6, 0xa2, 0x27, 0x0a, 0x9a, 0x3e, 0x41, 0x09, 0x33, 0xcc, 0xd7, 0x26, 0x8b, 0x30, 0x3b, 0x2e,
	0x63, 0x87, 0xfd, 0xda, 0x5c, 0x5d, 0xd9, 0x33, 0x9d, 0x4d, 0x17, 0x61, 0x96, 0x94, 0x11, 0x57,
	0x6f, 0xb8, 0x61, 0xeb, 0x77, 0x3f, 0xc7, 0x59, 0xf0, 0x6b, 0x9c, 0x05, 0xbf, 0xc7, 0x59, 0xf0,
	0xfd, 0xcf, 0x2c, 0x78, 0xff, 0xfa, 0xe0, 0xfb, 0x4b, 0x06, 0x2d, 0xd7, 0x9f, 0x71, 0x0b, 0x15,
	0xee, 0x99, 0xde, 0x09, 0xb9, 0x51, 0xe4, 0xee, 0xd8, 0x18, 0x06, 0x4e, 0x1a, 0xd6, 0x37, 0x82,
	0xfc, 0xf7, 0x7f, 0xbc, 0x32, 0xcb, 0x2a, 0x72, 0x57, 0xb9, 0xfc, 0x1b, 0x00, 0x00, 0xff, 0xff,
	0xcd, 0x54, 0x20, 0xc3, 0x3a, 0x02, 0x00, 0x00,
}
