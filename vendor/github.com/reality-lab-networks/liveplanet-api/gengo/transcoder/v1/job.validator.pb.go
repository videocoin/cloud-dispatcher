// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: transcoder/v1/job.proto

package v1

import fmt "fmt"
import github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
import proto "github.com/golang/protobuf/proto"
import math "math"
import _ "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "github.com/mwitkow/go-proto-validators"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *Job) Validate() error {
	if this.CreatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.CreatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("CreatedAt", err)
		}
	}
	if this.Spec != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Spec); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Spec", err)
		}
	}
	for _, item := range this.Tasks {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Tasks", err)
			}
		}
	}
	return nil
}
func (this *JobSpec) Validate() error {
	if nil == this.Input {
		return github_com_mwitkow_go_proto_validators.FieldError("Input", fmt.Errorf("message must exist"))
	}
	if this.Input != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Input); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Input", err)
		}
	}
	if nil == this.Output {
		return github_com_mwitkow_go_proto_validators.FieldError("Output", fmt.Errorf("message must exist"))
	}
	if this.Output != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Output); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Output", err)
		}
	}
	if this.Options != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Options); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Options", err)
		}
	}
	return nil
}
func (this *JobOutput) Validate() error {
	if nil == this.Video {
		return github_com_mwitkow_go_proto_validators.FieldError("Video", fmt.Errorf("message must exist"))
	}
	if this.Video != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Video); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Video", err)
		}
	}
	if this.Audio != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Audio); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Audio", err)
		}
	}
	return nil
}
func (this *JobVideoOutput) Validate() error {
	for _, item := range this.Sessions {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Sessions", err)
			}
		}
	}
	return nil
}
func (this *JobVideoSessionGroup) Validate() error {
	for _, item := range this.Session {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Session", err)
			}
		}
	}
	return nil
}
func (this *JobStatus) Validate() error {
	return nil
}
func (this *JobOptions) Validate() error {
	return nil
}
