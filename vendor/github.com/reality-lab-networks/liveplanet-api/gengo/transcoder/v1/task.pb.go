// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: transcoder/v1/task.proto

package v1 // import "github.com/reality-lab-networks/liveplanet-api/gengo/transcoder/v1"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Task struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BroadcastId          string               `protobuf:"bytes,2,opt,name=broadcast_id,json=broadcastId,proto3" json:"broadcast_id,omitempty"`
	UserId               uint32               `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EventId              uint64               `protobuf:"varint,4,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	PlatformId           string               `protobuf:"bytes,5,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	VariantId            string               `protobuf:"bytes,6,opt,name=variant_id,json=variantId,proto3" json:"variant_id,omitempty"`
	Status               Status               `protobuf:"varint,7,opt,name=status,proto3,enum=liveplanet.api.transcoder.v1.Status" json:"status,omitempty"`
	Kind                 string               `protobuf:"bytes,8,opt,name=kind,proto3" json:"kind,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Input                *TaskInput           `protobuf:"bytes,10,opt,name=input,proto3" json:"input,omitempty"`
	Output               *TaskOutput          `protobuf:"bytes,11,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Task) Reset()         { *m = Task{} }
func (m *Task) String() string { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()    {}
func (*Task) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_f2e66ee820356120, []int{0}
}
func (m *Task) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Task.Unmarshal(m, b)
}
func (m *Task) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Task.Marshal(b, m, deterministic)
}
func (dst *Task) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Task.Merge(dst, src)
}
func (m *Task) XXX_Size() int {
	return xxx_messageInfo_Task.Size(m)
}
func (m *Task) XXX_DiscardUnknown() {
	xxx_messageInfo_Task.DiscardUnknown(m)
}

var xxx_messageInfo_Task proto.InternalMessageInfo

func (m *Task) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Task) GetBroadcastId() string {
	if m != nil {
		return m.BroadcastId
	}
	return ""
}

func (m *Task) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Task) GetEventId() uint64 {
	if m != nil {
		return m.EventId
	}
	return 0
}

func (m *Task) GetPlatformId() string {
	if m != nil {
		return m.PlatformId
	}
	return ""
}

func (m *Task) GetVariantId() string {
	if m != nil {
		return m.VariantId
	}
	return ""
}

func (m *Task) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return StatusNone
}

func (m *Task) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *Task) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Task) GetInput() *TaskInput {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *Task) GetOutput() *TaskOutput {
	if m != nil {
		return m.Output
	}
	return nil
}

type TaskInput struct {
	Video                *VideoInput `protobuf:"bytes,1,opt,name=video,proto3" json:"video,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TaskInput) Reset()         { *m = TaskInput{} }
func (m *TaskInput) String() string { return proto.CompactTextString(m) }
func (*TaskInput) ProtoMessage()    {}
func (*TaskInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_f2e66ee820356120, []int{1}
}
func (m *TaskInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskInput.Unmarshal(m, b)
}
func (m *TaskInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskInput.Marshal(b, m, deterministic)
}
func (dst *TaskInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskInput.Merge(dst, src)
}
func (m *TaskInput) XXX_Size() int {
	return xxx_messageInfo_TaskInput.Size(m)
}
func (m *TaskInput) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskInput.DiscardUnknown(m)
}

var xxx_messageInfo_TaskInput proto.InternalMessageInfo

func (m *TaskInput) GetVideo() *VideoInput {
	if m != nil {
		return m.Video
	}
	return nil
}

type TaskOutput struct {
	Video                []*VideoOutput `protobuf:"bytes,1,rep,name=video,proto3" json:"video,omitempty"`
	Cmdline              string         `protobuf:"bytes,2,opt,name=cmdline,proto3" json:"cmdline,omitempty"`
	Auido                *AudioOutput   `protobuf:"bytes,3,opt,name=auido,proto3" json:"auido,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TaskOutput) Reset()         { *m = TaskOutput{} }
func (m *TaskOutput) String() string { return proto.CompactTextString(m) }
func (*TaskOutput) ProtoMessage()    {}
func (*TaskOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_task_f2e66ee820356120, []int{2}
}
func (m *TaskOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskOutput.Unmarshal(m, b)
}
func (m *TaskOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskOutput.Marshal(b, m, deterministic)
}
func (dst *TaskOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskOutput.Merge(dst, src)
}
func (m *TaskOutput) XXX_Size() int {
	return xxx_messageInfo_TaskOutput.Size(m)
}
func (m *TaskOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskOutput.DiscardUnknown(m)
}

var xxx_messageInfo_TaskOutput proto.InternalMessageInfo

func (m *TaskOutput) GetVideo() []*VideoOutput {
	if m != nil {
		return m.Video
	}
	return nil
}

func (m *TaskOutput) GetCmdline() string {
	if m != nil {
		return m.Cmdline
	}
	return ""
}

func (m *TaskOutput) GetAuido() *AudioOutput {
	if m != nil {
		return m.Auido
	}
	return nil
}

func init() {
	proto.RegisterType((*Task)(nil), "liveplanet.api.transcoder.v1.Task")
	proto.RegisterType((*TaskInput)(nil), "liveplanet.api.transcoder.v1.TaskInput")
	proto.RegisterType((*TaskOutput)(nil), "liveplanet.api.transcoder.v1.TaskOutput")
}

func init() { proto.RegisterFile("transcoder/v1/task.proto", fileDescriptor_task_f2e66ee820356120) }

var fileDescriptor_task_f2e66ee820356120 = []byte{
	// 524 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0x4d, 0x8e, 0xd3, 0x40,
	0x10, 0x85, 0xe3, 0xfc, 0x4e, 0x2a, 0x30, 0x8b, 0xde, 0xe0, 0x89, 0x86, 0x4c, 0x88, 0x90, 0x30,
	0x8b, 0xd8, 0x4a, 0x58, 0x21, 0x7e, 0x07, 0x89, 0x85, 0xc5, 0x02, 0xc9, 0x8c, 0x40, 0x62, 0x33,
	0xaa, 0xa4, 0x7b, 0x4c, 0x2b, 0xb6, 0xdb, 0xb2, 0xdb, 0x46, 0xdc, 0x84, 0x23, 0x70, 0x07, 0x2e,
	0xc0, 0x92, 0x23, 0xa0, 0x70, 0x11, 0xd4, 0x65, 0x7b, 0x42, 0x24, 0x34, 0x61, 0xe7, 0xea, 0xf7,
	0xbe, 0xe7, 0x52, 0x57, 0x35, 0xd8, 0x3a, 0xc3, 0x24, 0x5f, 0x2b, 0x2e, 0x32, 0xaf, 0x5c, 0x78,
	0x1a, 0xf3, 0x8d, 0x9b, 0x66, 0x4a, 0x2b, 0x76, 0x1a, 0xc9, 0x52, 0xa4, 0x11, 0x26, 0x42, 0xbb,
	0x98, 0x4a, 0x77, 0x67, 0x74, 0xcb, 0xc5, 0xf8, 0x2c, 0x54, 0x2a, 0x8c, 0x84, 0x47, 0xde, 0x55,
	0x71, 0xe5, 0x69, 0x19, 0x8b, 0x5c, 0x63, 0x9c, 0x56, 0xf8, 0x78, 0x1e, 0x4a, 0xfd, 0xa9, 0x58,
	0xb9, 0x6b, 0x15, 0x7b, 0xa1, 0x0a, 0xd5, 0xce, 0x69, 0x2a, 0x2a, 0xe8, 0xab, 0xb6, 0x8f, 0xf7,
	0xfb, 0xc8, 0x35, 0xea, 0x22, 0xaf, 0xb5, 0x93, 0x7d, 0xad, 0x94, 0x5c, 0xa8, 0x7f, 0x4b, 0x58,
	0x70, 0xd9, 0x48, 0xa7, 0xfb, 0x52, 0x2c, 0x34, 0x72, 0xd4, 0x58, 0xa9, 0xb3, 0xef, 0x1d, 0xe8,
	0x5e, 0x60, 0xbe, 0x61, 0xc7, 0xd0, 0x96, 0xdc, 0xb6, 0xa6, 0x96, 0x33, 0x0c, 0xda, 0x92, 0xb3,
	0x7b, 0x70, 0x6b, 0x95, 0x29, 0xe4, 0x6b, 0xcc, 0xf5, 0xa5, 0xe4, 0x76, 0x9b, 0x94, 0xd1, 0xf5,
	0x99, 0xcf, 0xd9, 0x1d, 0x18, 0x14, 0xb9, 0xc8, 0x8c, 0xda, 0x99, 0x5a, 0xce, 0xed, 0xa0, 0x6f,
	0x4a, 0x9f, 0xb3, 0x13, 0x38, 0x12, 0xa5, 0x48, 0x88, 0xeb, 0x4e, 0x2d, 0xa7, 0x1b, 0x0c, 0xa8,
	0xf6, 0x39, 0x3b, 0x83, 0x51, 0x1a, 0xa1, 0xbe, 0x52, 0x59, 0x6c, 0xd4, 0x1e, 0xa5, 0x42, 0x73,
	0xe4, 0x73, 0x76, 0x17, 0xa0, 0xc4, 0x4c, 0x62, 0x45, 0xf7, 0x49, 0x1f, 0xd6, 0x27, 0x3e, 0x67,
	0x4f, 0xa1, 0x5f, 0xdd, 0x89, 0x3d, 0x98, 0x5a, 0xce, 0xf1, 0xf2, 0xbe, 0x7b, 0xd3, 0x78, 0xdc,
	0x77, 0xe4, 0x0d, 0x6a, 0x86, 0x31, 0xe8, 0x6e, 0x64, 0xc2, 0xed, 0x23, 0x8a, 0xa5, 0x6f, 0xf6,
	0x18, 0x60, 0x9d, 0x09, 0xd4, 0x82, 0x5f, 0xa2, 0xb6, 0x87, 0x53, 0xcb, 0x19, 0x2d, 0xc7, 0x6e,
	0x35, 0x56, 0xb7, 0x19, 0x96, 0x7b, 0xd1, 0x8c, 0x35, 0x18, 0xd6, 0xee, 0x73, 0xcd, 0x9e, 0x41,
	0x4f, 0x26, 0x69, 0xa1, 0x6d, 0x20, 0xea, 0xc1, 0xcd, 0xbd, 0x98, 0x6b, 0xf6, 0x8d, 0x3d, 0xa8,
	0x28, 0xf6, 0x12, 0xfa, 0xaa, 0xd0, 0x86, 0x1f, 0x11, 0xef, 0x1c, 0xe6, 0xdf, 0x92, 0x3f, 0xa8,
	0xb9, 0xd9, 0x1b, 0x18, 0x5e, 0xa7, 0xb2, 0xe7, 0xd0, 0xa3, 0x95, 0xa0, 0x21, 0x1e, 0x4c, 0x7b,
	0x6f, 0xac, 0x75, 0x3b, 0x84, 0xcd, 0xbe, 0x59, 0x00, 0xbb, 0x7f, 0xb0, 0x17, 0xbb, 0xb8, 0x8e,
	0x33, 0x5a, 0x3e, 0xfc, 0x8f, 0xb8, 0xba, 0xbb, 0x8a, 0x63, 0x36, 0x0c, 0xd6, 0x31, 0x8f, 0x64,
	0x22, 0xea, 0xe5, 0x69, 0x4a, 0x13, 0x8d, 0x85, 0xe4, 0x8a, 0xd6, 0xe6, 0x60, 0xf4, 0xb9, 0x59,
	0xe6, 0x26, 0x9a, 0xb8, 0x57, 0x1f, 0x7e, 0x6c, 0x27, 0xad, 0x9f, 0xdb, 0x49, 0xeb, 0xd7, 0x76,
	0xd2, 0xfa, 0xfa, 0x7b, 0xd2, 0xfa, 0xf8, 0xfa, 0xaf, 0x67, 0x96, 0x09, 0x8c, 0xa4, 0xfe, 0x32,
	0x8f, 0x70, 0x35, 0x4f, 0x84, 0xfe, 0xac, 0xb2, 0x4d, 0xee, 0xed, 0x7e, 0x31, 0xc7, 0x54, 0x7a,
	0xa1, 0x48, 0x42, 0xe5, 0xed, 0x3d, 0x8d, 0x27, 0xe5, 0x62, 0xd5, 0xa7, 0x81, 0x3f, 0xfa, 0x13,
	0x00, 0x00, 0xff, 0xff, 0xdd, 0x13, 0x94, 0x84, 0x0f, 0x04, 0x00, 0x00,
}
